----- installation ------
JAVA 8
HADOOP 3.3.6
HIVE 3.1.3
SPARK 3.4.2
Mongo 6.0.24
hbase 2.5.6
-------------------------------------------------------------------
BASE MAVIS_TEST
SSH Tunnel :
IP: 102.16.7.154
Port: 8090
Utilisateur: mmtadmin
DB_connexion:
Port: 5432
Utilisateur: mirth_user
Mot de passe ny rehetra: rkt20mc!
----------------------------------------------------------
------discovery.py----------------------
install sshtunnel

vagrant ssh
export SSH_PASSWORD_MAVIS_TEST=rkt20mc!
export POSTGRES_PASSWORD_MAVIS_TEST=rkt20mc!
_______________________________________________________________________________________________
nombre u'Utilisateur
niveau de securité
production : gestion courante
deploiement locale .
_________________________________________________________________________________________________
budget et des ressources
recenser et identifier les sources
identifier les technologies de stockage
architecture adaptée
regle de securité et dep aux politiques 
m e place l'infrasctucture
_______________________________________________________________________________________________
fichier excel : Serveur FTP



_______________________________________________________________________________________________
il faut specifier les tables importants

MAVIS NOTHEME:
hms_patient : Données démographiques des patients.
acs_hospitalization : Hospitalisations.
acs_laboratory_request, acs_lab_test : Tests de laboratoire.
hms_appointment : Rendez-vous médicaux.
hms_treatment, prescription_order : Traitements et prescriptions.
acs_imaging_request, patient_imaging_test : Imagerie médicale.

_______________________________________________________________________________________________
Problèmes et solutions : 
Mentionne les champs vides dans le schéma pivot et ta solution envisagée 
(ex. : ajuster le mapping, utiliser NLP).

_______________________________________________________________________________________________
**Tableau comparatif des solutions de datalake** :
| Solution          | Interopérabilité FHIR | Scalabilité | Support NLP | Coût |
|-------------------|-----------------------|-------------|-------------|------|
| Databricks        | Élevée (Delta Lake)   | Élevée      | Oui (MLflow)| Moyen|
| Azure Data Lake   | Élevée (Health Data Services) | Élevée | Oui (Text Analytics) | Moyen |
| AWS Lake Formation| Moyenne               | Élevée      | Oui (Comprehend Medical) | Élevé |

_______________________________________________________________________________________________
discovery.py : 
Filtres pour cibler les tables pertinentes (ex. : patient, diagnosis, hospitalization).
Traitement par lots pour éviter la surcharge mémoire/CPU.
Cache pour réutiliser les métadonnées existantes.
Parallélisation optimisée avec ThreadPoolExecutor.
Logs détaillés pour faciliter le débogage.
_________________________________________________________________________________________________
ssh -fN -L 15432:localhost:5432 -p 8090 mmtadmin@102.16.7.154
execution en arrièe plan

_______________________________________________________________________________________________
pip freeze > requirements.txt
pour avoir toutes les listes des librairies installé pour les installer plus tard
_______________________________________________________________________________________________
SCHEMA PIVOT
| Domaine                  | Ressource FHIR                                   | Exemple de données à mapper depuis RMA                          |
| ------------------------ | ------------------------------------------------ | --------------------------------------------------------------- |
| **Patient**              | `Patient`                                        | Nom, prénom, sexe, date de naissance, identifiant unique        |
| **Rencontre médicale**   | `Encounter`                                      | Type de consultation, date/heure, service, CHRD2                |
| **Observation clinique** | `Observation`                                    | Tension, poids, résultats labo, diagnostics                     |
| **Diagnostic**           | `Condition`                                      | Codes CIM10, libellé diagnostic                                 |
| **Acte médical**         | `Procedure`                                      | Chirurgie, accouchement, vaccination                            |
| **Médication**           | `MedicationRequest` / `MedicationAdministration` | Ordonnances, traitements administrés                            |
| **Examen de labo**       | `DiagnosticReport`                               | Résultats de laboratoire (tests sanguins, VIH, paludisme, etc.) |
| **Organisation**         | `Organization`                                   | Infos sur l’hôpital / CHRD2                                     |
| **Praticien**            | `Practitioner`                                   | Médecin, infirmier, sage-femme                                  |
| **Vaccination**          | `Immunization`                                   | PEV, VAT, etc.                                                  |
| **Finances**             | `Claim`                                          | Recettes, facturation, couverture CNSS                          |

_______________________________________________________________________________________________
Ressources principales de FHIR
Voici les ressources principales que tu rencontreras souvent en FHIR :
Patient : Informations sur le patient (nom, adresse, etc.)
Observation : Mesures cliniques (par exemple, température, poids, résultats de laboratoire)
Practitioner : Données sur le professionnel de santé (médecin, infirmière, etc.)
Encounter : Détails sur une rencontre avec le patient (hospitalisation, consultation)
Medication : Médicaments prescrits et administrés
Condition : Diagnostic de santé d’un patient (par exemple, diabète, hypertension)
Procedure : Procédures médicales effectuées
AllergyIntolerance : Allergies et intolérances du patient

______________________________________________________________________________________________
TEMPS D'execution
discovery.py : 